// <auto-generated />
using System;
using EventPlus_.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EventPlus_.Migrations
{
    [DbContext(typeof(Eventos_Context))]
    [Migration("20250313163120_Add-Migration EventosPlus")]
    partial class AddMigrationEventosPlus
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EventPlus_.Domains.ComentarioEvento", b =>
                {
                    b.Property<Guid>("ComentarioEventoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EventosID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Exibe")
                        .HasColumnType("BIT");

                    b.Property<Guid>("UsuarioID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ComentarioEventoID");

                    b.HasIndex("EventosID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("ComentarioEvento");
                });

            modelBuilder.Entity("EventPlus_.Domains.Eventos", b =>
                {
                    b.Property<Guid>("EventosID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataEvento")
                        .HasColumnType("DATE");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("InstituicaoID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NomeEvento")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<Guid>("TipoEventoID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EventosID");

                    b.HasIndex("InstituicaoID");

                    b.HasIndex("TipoEventoID");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("EventPlus_.Domains.Instituicao", b =>
                {
                    b.Property<Guid>("InstituicaoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("VARCHAR(14)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("NomeFantasia")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("InstituicaoID");

                    b.HasIndex("Cnpj")
                        .IsUnique();

                    b.ToTable("Instituicao");
                });

            modelBuilder.Entity("EventPlus_.Domains.Presenca", b =>
                {
                    b.Property<Guid>("PresencaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EventosID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Situacao")
                        .HasColumnType("BIT");

                    b.Property<Guid>("UsuarioID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PresencaID");

                    b.HasIndex("EventosID")
                        .IsUnique();

                    b.HasIndex("UsuarioID");

                    b.ToTable("Presenca");
                });

            modelBuilder.Entity("EventPlus_.Domains.TipoEvento", b =>
                {
                    b.Property<Guid>("TipoEventoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TituloTipoEvento")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("TipoEventoID");

                    b.ToTable("TipoEvento");
                });

            modelBuilder.Entity("EventPlus_.Domains.TipoUsuario", b =>
                {
                    b.Property<Guid>("TipoUsuarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TituloTipoUsuario")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("TipoUsuarioID");

                    b.ToTable("TipoUsuario");
                });

            modelBuilder.Entity("EventPlus_.Domains.Usuario", b =>
                {
                    b.Property<Guid>("UsuarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR(60)");

                    b.Property<Guid>("TipoUsuarioID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UsuarioID");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("TipoUsuarioID");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("EventPlus_.Domains.ComentarioEvento", b =>
                {
                    b.HasOne("EventPlus_.Domains.Eventos", "Eventos")
                        .WithMany()
                        .HasForeignKey("EventosID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EventPlus_.Domains.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Eventos");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("EventPlus_.Domains.Eventos", b =>
                {
                    b.HasOne("EventPlus_.Domains.Instituicao", "Instituicao")
                        .WithMany()
                        .HasForeignKey("InstituicaoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EventPlus_.Domains.TipoEvento", "TipoEvento")
                        .WithMany()
                        .HasForeignKey("TipoEventoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instituicao");

                    b.Navigation("TipoEvento");
                });

            modelBuilder.Entity("EventPlus_.Domains.Presenca", b =>
                {
                    b.HasOne("EventPlus_.Domains.Eventos", "Eventos")
                        .WithOne("Presenca")
                        .HasForeignKey("EventPlus_.Domains.Presenca", "EventosID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EventPlus_.Domains.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Eventos");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("EventPlus_.Domains.Usuario", b =>
                {
                    b.HasOne("EventPlus_.Domains.TipoUsuario", "TipoUsuarios")
                        .WithMany()
                        .HasForeignKey("TipoUsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoUsuarios");
                });

            modelBuilder.Entity("EventPlus_.Domains.Eventos", b =>
                {
                    b.Navigation("Presenca");
                });
#pragma warning restore 612, 618
        }
    }
}
